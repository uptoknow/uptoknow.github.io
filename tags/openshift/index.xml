<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Openshift on UPTOKNOW</title>
    <link>https://uptoknow.github.io/tags/openshift/</link>
    <description>Recent content in Openshift on UPTOKNOW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Sep 2017 20:00:08 +0800</lastBuildDate>
    
	<atom:link href="https://uptoknow.github.io/tags/openshift/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OpenShift with CoreOS Dex Openid Provider</title>
      <link>https://uptoknow.github.io/post/openshift-with-coreos-dex-openid-provider/</link>
      <pubDate>Fri, 15 Sep 2017 20:00:08 +0800</pubDate>
      
      <guid>https://uptoknow.github.io/post/openshift-with-coreos-dex-openid-provider/</guid>
      <description>Overview Dex is an openid provider, opensourced by CoreOS,it can be integrated with k8s, and it also can be integrated with OpenShift,here I will write how to setup the openid provider with openshift.
Dex is not a user management system like ldap,saml,etc. but acts as a portal to other identity providers, it has different connectors that can be used to connect to different user management system, when you login use user/pass through the portal page of dex, it will generate an ID token for you.</description>
    </item>
    
    <item>
      <title>Openshift Keycloak Openid</title>
      <link>https://uptoknow.github.io/post/openshift-with-keycloak-openid/</link>
      <pubDate>Thu, 14 Sep 2017 18:28:15 +0800</pubDate>
      
      <guid>https://uptoknow.github.io/post/openshift-with-keycloak-openid/</guid>
      <description>Keycloak is an powerful tools that can be used as openid provider and SAML auth provider, and here I will record how to integrate openshift with keycloak.
First, download the keycloak from here
Then, you neec setup the keycloak with https enabled, as openshift ask the openid provider to support https, see the openid spec here We will setup a standalone cluster and update the binding address, and we need generate the keystore for serve the https the standalone config file is at: standalone/configuration/standalone.</description>
    </item>
    
  </channel>
</rss>